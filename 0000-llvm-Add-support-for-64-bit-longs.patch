--- llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.cpp.64bitLongs~	2014-10-28 17:57:11.496179606 +0100
+++ llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.cpp	2014-10-28 17:58:03.718526737 +0100
@@ -211,6 +211,7 @@ void ARMSubtarget::initializeEnvironment
   Thumb2DSP = false;
   UseNaClTrap = false;
   UnsafeFPMath = false;
+  UseLong64 = false;
 }
 
 void ARMSubtarget::initSubtargetFeatures(StringRef CPU, StringRef FS) {
--- llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.h.64bitLongs~	2014-10-13 12:22:19.000000000 +0200
+++ llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.h	2014-10-28 17:57:11.496179606 +0100
@@ -200,6 +200,9 @@ protected:
   /// NaCl TRAP instruction is generated instead of the regular TRAP.
   bool UseNaClTrap;
 
+  /// Force long to be a 64-bit type (RenderScript-specific)
+  bool UseLong64;
+
   /// Target machine allowed unsafe FP math (such as use of NEON fp)
   bool UnsafeFPMath;
 
--- llvm-3.6.0.src/lib/Target/ARM/ARM.td.64bitLongs~	2014-10-13 12:22:19.000000000 +0200
+++ llvm-3.6.0.src/lib/Target/ARM/ARM.td	2014-10-28 17:57:11.496179606 +0100
@@ -276,6 +276,10 @@ def FeatureAPCS  : SubtargetFeature<"apc
 def FeatureAAPCS : SubtargetFeature<"aapcs", "TargetABI", "ARM_ABI_AAPCS",
                                    "Use the AAPCS ABI">;
 
+// RenderScript-specific support for 64-bit long types on all targets
+def FeatureLong64 : SubtargetFeature<"long64", "UseLong64",
+                                     "true",
+                                     "long type is forced to be 64-bit">;
 
 class ProcNoItin<string Name, list<SubtargetFeature> Features>
  : Processor<Name, NoItineraries, Features>;
