--- llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.cpp.64bitLongs~	2015-01-14 12:23:27.000000000 +0100
+++ llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.cpp	2015-02-05 22:32:07.840918857 +0100
@@ -212,6 +212,7 @@ void ARMSubtarget::initializeEnvironment
   Thumb2DSP = false;
   UseNaClTrap = false;
   UnsafeFPMath = false;
+  UseLong64 = false;
 }
 
 void ARMSubtarget::initSubtargetFeatures(StringRef CPU, StringRef FS) {
--- llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.h.64bitLongs~	2015-01-14 12:23:27.000000000 +0100
+++ llvm-3.6.0.src/lib/Target/ARM/ARMSubtarget.h	2015-02-05 22:32:07.840918857 +0100
@@ -201,6 +201,9 @@ protected:
   /// NaCl TRAP instruction is generated instead of the regular TRAP.
   bool UseNaClTrap;
 
+  /// Force long to be a 64-bit type (RenderScript-specific)
+  bool UseLong64;
+
   /// Target machine allowed unsafe FP math (such as use of NEON fp)
   bool UnsafeFPMath;
 
--- llvm-3.6.0.src/lib/Target/ARM/ARM.td.64bitLongs~	2015-02-05 22:32:07.840918857 +0100
+++ llvm-3.6.0.src/lib/Target/ARM/ARM.td	2015-02-05 22:33:15.972995702 +0100
@@ -273,6 +273,12 @@ def ProcKrait   : SubtargetFeature<"krai
 class ProcNoItin<string Name, list<SubtargetFeature> Features>
  : Processor<Name, NoItineraries, Features>;
 
+
+// RenderScript-specific support for 64-bit long types on all targets
+def FeatureLong64 : SubtargetFeature<"long64", "UseLong64",
+                                     "true",
+                                     "long type is forced to be 64-bit">;
+
 // V4 Processors.
 def : ProcNoItin<"generic",         []>;
 def : ProcNoItin<"arm8",            []>;
