diff -up llvm-project-llvmorg-21.1.0-rc1/llvm/tools/gold/gold-plugin.cpp.13~ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/gold/gold-plugin.cpp
--- llvm-project-llvmorg-21.1.0-rc1/llvm/tools/gold/gold-plugin.cpp.13~	2025-07-17 21:02:34.000000000 +0200
+++ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/gold/gold-plugin.cpp	2025-07-18 01:36:58.104336909 +0200
@@ -278,9 +278,12 @@ namespace options {
     } else if (opt.consume_front("cache-policy=")) {
       cache_policy = std::string(opt);
     } else if (opt.size() == 2 && opt[0] == 'O') {
-      if (opt[1] < '0' || opt[1] > '3')
-        message(LDPL_FATAL, "Optimization level must be between 0 and 3");
-      OptLevel = opt[1] - '0';
+      if (opt[1] < '0')
+        OptLevel = 0;
+      else if(opt[1] > '3')
+        OptLevel = 3;
+      else
+        OptLevel = opt[1] - '0';
     } else if (opt.consume_front("jobs=")) {
       Parallelism = std::string(opt);
       if (!get_threadpool_strategy(opt))
diff -up llvm-project-llvmorg-21.1.0-rc1/llvm/tools/llvm-lto/llvm-lto.cpp.13~ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/llvm-lto/llvm-lto.cpp
--- llvm-project-llvmorg-21.1.0-rc1/llvm/tools/llvm-lto/llvm-lto.cpp.13~	2025-07-17 21:02:34.000000000 +0200
+++ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/llvm-lto/llvm-lto.cpp	2025-07-18 01:38:36.361583709 +0200
@@ -1001,8 +1001,10 @@ int main(int argc, char **argv) {
   cl::HideUnrelatedOptions({&LTOCategory, &getColorCategory()});
   cl::ParseCommandLineOptions(argc, argv, "llvm LTO linker\n");
 
-  if (OptLevel < '0' || OptLevel > '3')
-    error("optimization level must be between 0 and 3");
+  if (OptLevel < '0')
+    OptLevel = '0';
+  else if (OptLevel > '3')
+    OptLevel = '3';
 
   // Initialize the configured targets.
   InitializeAllTargets();
diff -up llvm-project-llvmorg-21.1.0-rc1/llvm/tools/lto/lto.cpp.13~ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/lto/lto.cpp
--- llvm-project-llvmorg-21.1.0-rc1/llvm/tools/lto/lto.cpp.13~	2025-07-17 21:02:34.000000000 +0200
+++ llvm-project-llvmorg-21.1.0-rc1/llvm/tools/lto/lto.cpp	2025-07-18 01:36:58.104750399 +0200
@@ -154,9 +154,12 @@ static void lto_add_attrs(lto_code_gen_t
   LTOCodeGenerator *CG = unwrap(cg);
   CG->setAttrs(codegen::getMAttrs());
 
-  if (OptLevel < '0' || OptLevel > '3')
-    report_fatal_error("Optimization level must be between 0 and 3");
-  CG->setOptLevel(OptLevel - '0');
+  if (OptLevel < '0')
+    CG->setOptLevel(0);
+  else if (OptLevel > '3')
+    CG->setOptLevel(3);
+  else
+    CG->setOptLevel(OptLevel - '0');
   CG->setFreestanding(EnableFreestanding);
   CG->setDisableVerify(DisableVerify);
 }
