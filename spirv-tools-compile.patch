diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp.omv~	2021-09-16 17:39:27.685883345 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp	2021-09-16 17:40:01.331256452 +0200
@@ -227,6 +227,10 @@ void DivergenceAnalysis::Setup(opt::Func
       });
 }
 
+// BUG? Override -Werror because we seem to be getting a
+// false positive on -Wcovered-switch-default below with clang 13
+#pragma GCC diagnostic warning "-Wcovered-switch-default"
+
 std::ostream& operator<<(std::ostream& os,
                          DivergenceAnalysis::DivergenceLevel level) {
   switch (level) {
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp.omv~	2021-09-16 17:35:18.404119780 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp	2021-09-16 17:35:26.188164257 +0200
@@ -232,6 +232,7 @@ void ConvertToSampledImagePass::FindUses
       case SpvOpImageQuerySamples:
       case SpvOpImageSparseFetch:
         uses->push_back(user);
+	break;
       default:
         break;
     }
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/types.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/types.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/types.cpp.omv~	2021-09-16 17:36:02.626372293 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/opt/types.cpp	2021-09-16 17:38:29.937216997 +0200
@@ -96,6 +96,10 @@ bool Type::IsUniqueType(bool allowVariab
   }
 }
 
+// BUG? Override -Werror because we seem to be getting a
+// false positive on -Wcovered-switch-default below with clang 13
+#pragma GCC diagnostic warning "-Wcovered-switch-default"
+
 std::unique_ptr<Type> Type::Clone() const {
   std::unique_ptr<Type> type;
   switch (kind_) {
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/spirv_target_env.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/spirv_target_env.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/spirv_target_env.cpp.omv~	2021-09-16 17:19:08.671370318 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/spirv_target_env.cpp	2021-09-16 17:19:32.675521760 +0200
@@ -307,8 +307,8 @@ std::string spvLogStringForEnv(spv_targe
     }
     case SPV_ENV_VULKAN_1_0:
     case SPV_ENV_VULKAN_1_1:
-    case SPV_ENV_VULKAN_1_1_SPIRV_1_4: {
-      case SPV_ENV_VULKAN_1_2:
+    case SPV_ENV_VULKAN_1_1_SPIRV_1_4:
+    case SPV_ENV_VULKAN_1_2: {
         return "Vulkan";
     }
     case SPV_ENV_UNIVERSAL_1_0:
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/text_handler.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/text_handler.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/text_handler.cpp.omv~	2021-09-16 16:55:30.985077747 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/text_handler.cpp	2021-09-16 16:55:42.051132347 +0200
@@ -120,7 +120,7 @@ spv_result_t getWord(spv_text text, spv_
         case '\n':
         case '\r':
           if (escaping || quoting) break;
-        // Fall through.
+          [[clang::fallthrough]];
         case '\0': {  // NOTE: End of word found!
           word->assign(text->str + start_index, text->str + position->index);
           return SPV_SUCCESS;
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp.omv~	2021-09-16 17:34:21.369793491 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp	2021-09-16 17:34:37.160883906 +0200
@@ -192,6 +192,7 @@ bool ContainsInvalidBool(ValidationState
         auto member_type = _.FindDef(member_type_id);
         if (ContainsInvalidBool(_, member_type, skip_builtin)) return true;
       }
+      break;
     default:
       break;
   }
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp.omv~	2021-09-16 16:54:45.950855311 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp	2021-09-16 16:54:55.620903109 +0200
@@ -453,6 +453,7 @@ spv_result_t ValidateExecutionMode(Valid
                     "execution model.";
         }
       }
+      break;
     default:
       break;
   }
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp.omv~	2021-09-16 17:33:55.738646611 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp	2021-09-16 17:34:09.525725637 +0200
@@ -62,6 +62,7 @@ spv_result_t PrimitivesPass(ValidationSt
                << spvOpcodeString(opcode)
                << ": expected Stream to be constant instruction";
       }
+      break;
     }
 
     default:
diff -up llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/CMakeLists.txt.omv~ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/CMakeLists.txt
--- llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/CMakeLists.txt.omv~	2021-09-16 20:33:07.787777602 +0200
+++ llvm-project-release-13.x/llvm/projects/SPIRV-Tools/source/CMakeLists.txt	2021-09-16 20:33:40.876885086 +0200
@@ -376,7 +376,7 @@ endfunction()
 # unlike the other SPIRV_TOOLS target, defaults to hidden symbol visibility.
 add_library(${SPIRV_TOOLS}-shared SHARED ${SPIRV_SOURCES})
 spirv_tools_default_target_options(${SPIRV_TOOLS}-shared)
-set_target_properties(${SPIRV_TOOLS}-shared PROPERTIES CXX_VISIBILITY_PRESET hidden)
+set_target_properties(${SPIRV_TOOLS}-shared PROPERTIES CXX_VISIBILITY_PRESET hidden VERSION "${LLVM_VERSION_MAJOR}${LLVM_VERSION_SUFFIX}" SOVERSION "${LLVM_VERSION_MAJOR}${LLVM_VERSION_SUFFIX}")
 target_compile_definitions(${SPIRV_TOOLS}-shared
   PRIVATE SPIRV_TOOLS_IMPLEMENTATION
   PUBLIC SPIRV_TOOLS_SHAREDLIB
