--- llvm-3.7.0.src/tools/clang/lib/Driver/Tools.cpp.musl8~	2015-07-28 13:27:56.357759342 +0200
+++ llvm-3.7.0.src/tools/clang/lib/Driver/Tools.cpp	2015-07-28 13:41:36.168953917 +0200
@@ -601,8 +601,10 @@ StringRef tools::arm::getARMFloatABI(con
     default:
       switch (Triple.getEnvironment()) {
       case llvm::Triple::GNUEABIHF:
+      case llvm::Triple::MuslEABIHF:
         FloatABI = "hard";
         break;
+      case llvm::Triple::MuslEABI:
       case llvm::Triple::GNUEABI:
         FloatABI = (Triple.getVendorName().equals("hardfloat") || Triple.getArchName().find('h')!=StringRef::npos) ? "hard" : "softfp";
         break;
@@ -7858,25 +7860,51 @@ static std::string getLinuxDynamicLinker
     else
       return "/system/bin/linker";
   } else if (Arch == llvm::Triple::x86 || Arch == llvm::Triple::sparc ||
-             Arch == llvm::Triple::sparcel)
+             Arch == llvm::Triple::sparcel) {
+    if (ToolChain.getTriple().getEnvironment() == llvm::Triple::Musl)
+      return "/lib/ld-musl-i386.so.1"; // musl hasn't been and won't be ported to sparc, so we can ignore the sparc case here
     return "/lib/ld-linux.so.2";
-  else if (Arch == llvm::Triple::aarch64)
+  } else if (Arch == llvm::Triple::aarch64)
     return "/lib/ld-linux-aarch64.so.1";
   else if (Arch == llvm::Triple::aarch64_be)
     return "/lib/ld-linux-aarch64_be.so.1";
   else if (Arch == llvm::Triple::arm || Arch == llvm::Triple::thumb) {
-    if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
-        tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
-      return "/lib/ld-linux-armhf.so.3";
-    else
-      return "/lib/ld-linux.so.3";
+    switch (ToolChain.getTriple().getEnvironment()) {
+    case llvm::Triple::Musl:
+    case llvm::Triple::MuslEABI:
+      if (tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
+        return "/lib/ld-musl-armhf.so.3";
+      else
+        return "/lib/ld-musl-arm.so.3";
+    case llvm::Triple::MuslEABIHF:
+      return "/lib/ld-musl-armhf.so.3";
+    default:
+      if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
+          tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
+        return "/lib/ld-linux-armhf.so.3";
+      else
+        return "/lib/ld-linux.so.3";
+    }
   } else if (Arch == llvm::Triple::armeb || Arch == llvm::Triple::thumbeb) {
     // TODO: check which dynamic linker name.
-    if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
-        tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
-      return "/lib/ld-linux-armhf.so.3";
-    else
-      return "/lib/ld-linux.so.3";
+    switch (ToolChain.getTriple().getEnvironment()) {
+    case llvm::Triple::Musl:
+    case llvm::Triple::MuslEABI:
+      if (tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
+        return "/lib/ld-musl-armhf.so.3";
+    else
+       return "/lib/ld-musl-arm.so.3";
+    case llvm::Triple::MuslEABIHF:
+       return "/lib/ld-musl-armhf.so.3";
+    case llvm::Triple::GNUEABIHF:
+       return "/lib/ld-linux-armhf.so.3";
+    default:
+      if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
+          tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
+        return "/lib/ld-linux-armhf.so.3";
+      else
+        return "/lib/ld-linux.so.3";
+    }
   } else if (Arch == llvm::Triple::mips || Arch == llvm::Triple::mipsel ||
              Arch == llvm::Triple::mips64 || Arch == llvm::Triple::mips64el) {
     StringRef CPUName;
@@ -7911,8 +7939,13 @@ static std::string getLinuxDynamicLinker
   else if (Arch == llvm::Triple::sparcv9)
     return "/lib64/ld-linux.so.2";
   else if (Arch == llvm::Triple::x86_64 &&
+           ToolChain.getTriple().getEnvironment() == llvm::Triple::MuslX32)
+    return "/libx32/ld-musl-x32.so.2";
+  else if (Arch == llvm::Triple::x86_64 &&
            ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUX32)
     return "/libx32/ld-linux-x32.so.2";
+  else if (ToolChain.getTriple().getEnvironment() == llvm::Triple::Musl)
+    return "/lib64/ld-musl-x86_64.so.1";
   else
     return "/lib64/ld-linux-x86-64.so.2";
 }
