--- llvm-5.0.0.src/include/llvm/Analysis/TargetLibraryInfo.h.musl1~	2017-06-08 22:00:09.000000000 +0200
+++ llvm-5.0.0.src/include/llvm/Analysis/TargetLibraryInfo.h	2017-06-15 23:43:26.884422292 +0200
@@ -19,6 +19,17 @@
 #include "llvm/IR/PassManager.h"
 #include "llvm/Pass.h"
 
+#ifndef __GLIBC__ // for musl
+#undef fopen64
+#undef fseeko64
+#undef fstat64
+#undef fstatvfs64
+#undef ftello64
+#undef lstat64
+#undef stat64
+#undef tmpfile64
+#endif
+
 namespace llvm {
 template <typename T> class ArrayRef;
 
--- llvm-5.0.0.src/lib/Analysis/TargetLibraryInfo.cpp.musl1~	2017-06-15 23:43:26.885422268 +0200
+++ llvm-5.0.0.src/lib/Analysis/TargetLibraryInfo.cpp	2017-06-15 23:44:50.174441128 +0200
@@ -439,14 +439,15 @@ static void initialize(TargetLibraryInfo
   }
 
   // The following functions are available on at least Linux:
-  if (!T.isOSLinux()) {
+  if (!T.isOSLinux())
+    TLI.setUnavailable(LibFunc_memalign);
+  if (1 /*!T.isGlibc()*/) {
     TLI.setUnavailable(LibFunc_dunder_strdup);
     TLI.setUnavailable(LibFunc_dunder_strtok_r);
     TLI.setUnavailable(LibFunc_dunder_isoc99_scanf);
     TLI.setUnavailable(LibFunc_dunder_isoc99_sscanf);
     TLI.setUnavailable(LibFunc_under_IO_getc);
     TLI.setUnavailable(LibFunc_under_IO_putc);
-    TLI.setUnavailable(LibFunc_memalign);
     TLI.setUnavailable(LibFunc_fopen64);
     TLI.setUnavailable(LibFunc_fseeko64);
     TLI.setUnavailable(LibFunc_fstat64);
--- llvm-5.0.0.src/lib/Support/Unix/Signals.inc.musl1~	2017-06-06 13:49:48.000000000 +0200
+++ llvm-5.0.0.src/lib/Support/Unix/Signals.inc	2017-06-15 23:43:26.885422268 +0200
@@ -294,7 +294,7 @@ void llvm::sys::AddSignalHandler(void (*
   RegisterHandlers();
 }
 
-#if defined(HAVE_BACKTRACE) && ENABLE_BACKTRACES && HAVE_LINK_H &&    \
+#if defined(HAVE_BACKTRACE) && defined(__GLIBC__) && ENABLE_BACKTRACES && HAVE_LINK_H &&    \
     (defined(__linux__) || defined(__FreeBSD__) ||                             \
      defined(__FreeBSD_kernel__) || defined(__NetBSD__))
 struct DlIteratePhdrData {
