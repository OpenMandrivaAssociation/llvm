Index: llvm/clang/lib/Basic/Targets/RISCV.cpp
===================================================================
--- llvm/clang/lib/Basic/Targets/RISCV.cpp
+++ llvm/clang/lib/Basic/Targets/RISCV.cpp
@@ -56,6 +56,10 @@
     // A 5-bit unsigned immediate for CSR access instructions.
     Info.setRequiresImmediate(0, 31);
     return true;
+  case 'A':
+    // An address that is held in a general-purpose register.
+    Info.setAllowsMemory();
+    return true;
   }
 }
 
Index: llvm/clang/test/CodeGen/riscv-inline-asm.c
===================================================================
--- llvm/clang/test/CodeGen/riscv-inline-asm.c
+++ llvm/clang/test/CodeGen/riscv-inline-asm.c
@@ -26,3 +26,9 @@
 // CHECK: call void asm sideeffect "", "K"(i32 0)
   asm volatile ("" :: "K"(0));
 }
+
+void test_A(int *p) {
+// CHECK-LABEL: define void @test_A(i32* %p)
+// CHECK: call void asm sideeffect "", "*A"(i32* %p)
+  asm volatile("" :: "A"(*p));
+}
