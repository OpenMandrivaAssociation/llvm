diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/lint/divergence_analysis.cpp	2022-04-13 12:14:20.067548247 +0200
@@ -21,6 +21,8 @@
 #include "source/opt/instruction.h"
 #include "spirv/unified1/spirv.h"
 
+#pragma GCC diagnostic ignored "-Wcovered-switch-default"
+
 namespace spvtools {
 namespace lint {
 
diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/convert_to_sampled_image_pass.cpp	2022-04-13 12:14:20.067548247 +0200
@@ -232,6 +232,7 @@ void ConvertToSampledImagePass::FindUses
       case SpvOpImageQuerySamples:
       case SpvOpImageSparseFetch:
         uses->push_back(user);
+	break;
       default:
         break;
     }
diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/types.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/types.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/types.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/opt/types.cpp	2022-04-13 12:14:20.067548247 +0200
@@ -25,6 +25,8 @@
 #include "source/util/make_unique.h"
 #include "spirv/unified1/spirv.h"
 
+#pragma GCC diagnostic ignored "-Wcovered-switch-default"
+
 namespace spvtools {
 namespace opt {
 namespace analysis {
diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_memory.cpp	2022-04-13 12:14:20.069548241 +0200
@@ -192,6 +192,7 @@ bool ContainsInvalidBool(ValidationState
         auto member_type = _.FindDef(member_type_id);
         if (ContainsInvalidBool(_, member_type, skip_builtin)) return true;
       }
+      break;
     default:
       break;
   }
diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_mode_setting.cpp	2022-04-13 12:14:20.069548241 +0200
@@ -464,6 +464,7 @@ spv_result_t ValidateExecutionMode(Valid
                     "execution model.";
         }
       }
+      break;
     default:
       break;
   }
diff -up llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp.29~ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp
--- llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp.29~	2022-04-07 21:21:52.000000000 +0200
+++ llvm-project-14.0.1.src/llvm/projects/SPIRV-Tools/source/val/validate_primitives.cpp	2022-04-13 12:14:20.069548241 +0200
@@ -62,6 +62,7 @@ spv_result_t PrimitivesPass(ValidationSt
                << spvOpcodeString(opcode)
                << ": expected Stream to be constant instruction";
       }
+      break;
     }
 
     default:
