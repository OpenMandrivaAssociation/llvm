From 8bf8e2859f38681893cc4008c7c7a9c2b2c02b18 Mon Sep 17 00:00:00 2001
From: Andrei Safronov <safronov@espressif.com>
Date: Wed, 5 Apr 2023 00:59:15 +0300
Subject: [PATCH 073/158] [Xtensa] Initialize MCSubtargetInfo with esp32.

Initialize Xtensa MCSubtargetInfo with esp32 subtarget by default.
---
 llvm/test/CodeGen/Xtensa/atomicrmw.ll | 103 ++++++++++++++++++++++++++
 1 file changed, 103 insertions(+)
 create mode 100644 llvm/test/CodeGen/Xtensa/atomicrmw.ll

diff --git a/llvm/test/CodeGen/Xtensa/atomicrmw.ll b/llvm/test/CodeGen/Xtensa/atomicrmw.ll
new file mode 100644
index 000000000000..f2b7526e33e8
--- /dev/null
+++ b/llvm/test/CodeGen/Xtensa/atomicrmw.ll
@@ -0,0 +1,103 @@
+; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
+; RUN: llc -mtriple=xtensa -verify-machineinstrs < %s \
+; RUN:   | FileCheck -check-prefix=CHECK-XTENSA %s
+
+define i8 @atomicrmw_xchg_i8_seq_cst(i8* %a, i8 %b) nounwind {
+; CHECK-XTENSA-LABEL: atomicrmw_xchg_i8_seq_cst:
+; CHECK-XTENSA:       # %bb.0:
+; CHECK-XTENSA-NEXT:    entry	a1, 32
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    movi.n	a8, 3
+; CHECK-XTENSA-NEXT:    and	a8, a8, a2
+; CHECK-XTENSA-NEXT:    sub	a9, a2, a8
+; CHECK-XTENSA-NEXT:    slli	a8, a8, 3
+; CHECK-XTENSA-NEXT:    movi	a10, 255
+; CHECK-XTENSA-NEXT:    ssl	a8
+; CHECK-XTENSA-NEXT:    movi.n	a11, -1
+; CHECK-XTENSA-NEXT:    sll	a10, a10
+; CHECK-XTENSA-NEXT:    xor	a11, a10, a11
+; CHECK-XTENSA-NEXT:    l32i.n	a12, a9, 0
+; CHECK-XTENSA-NEXT:    sll	a12, a3
+; CHECK-XTENSA-NEXT:    l32i.n	a13, a9, 0
+; CHECK-XTENSA-NEXT:    and	a14, a13, a10
+; CHECK-XTENSA-NEXT:  .LBB0_1: # =>This Loop Header: Depth=1
+; CHECK-XTENSA-NEXT:    #     Child Loop BB0_2 Depth 2
+; CHECK-XTENSA-NEXT:    mov.n	a13, a14
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    l32i.n	a14, a9, 0
+; CHECK-XTENSA-NEXT:    and	a7, a14, a11
+; CHECK-XTENSA-NEXT:  .LBB0_2: #   Parent Loop BB0_1 Depth=1
+; CHECK-XTENSA-NEXT:  # =>  This Inner Loop Header: Depth=2
+; CHECK-XTENSA-NEXT:    mov.n	a15, a7
+; CHECK-XTENSA-NEXT:    or	a14, a12, a15
+; CHECK-XTENSA-NEXT:    or	a7, a13, a15
+; CHECK-XTENSA-NEXT:    wsr	a7, scompare1
+; CHECK-XTENSA-NEXT:    s32c1i	a14, a9, 0
+; CHECK-XTENSA-NEXT:    beq	a7, a14, .LBB0_4
+; CHECK-XTENSA-NEXT:  # %bb.3: #   in Loop: Header=BB0_2 Depth=2
+; CHECK-XTENSA-NEXT:    and	a7, a14, a11
+; CHECK-XTENSA-NEXT:    bne	a7, a15, .LBB0_2
+; CHECK-XTENSA-NEXT:  .LBB0_4: #   in Loop: Header=BB0_1 Depth=1
+; CHECK-XTENSA-NEXT:    and	a14, a14, a10
+; CHECK-XTENSA-NEXT:    bne	a14, a13, .LBB0_1
+; CHECK-XTENSA-NEXT:  # %bb.5:
+; CHECK-XTENSA-NEXT:    ssr	a8
+; CHECK-XTENSA-NEXT:    srl	a8, a14
+; CHECK-XTENSA-NEXT:    sext	a2, a8, 7
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    retw.n
+
+  %1 = atomicrmw xchg i8* %a, i8 %b seq_cst
+  ret i8 %1
+}
+
+define i16 @atomicrmw_xchg_i16_seq_cst(i16* %a, i16 %b) nounwind {
+; CHECK-XTENSA-LABEL: atomicrmw_xchg_i16_seq_cst:
+; CHECK-XTENSA:       # %bb.0:
+; CHECK-XTENSA-NEXT:    entry	a1, 32
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    movi.n	a8, 3
+; CHECK-XTENSA-NEXT:    and	a8, a8, a2
+; CHECK-XTENSA-NEXT:    sub	a9, a2, a8
+; CHECK-XTENSA-NEXT:    slli	a8, a8, 3
+; CHECK-XTENSA-NEXT:    movi.n	a10, 1
+; CHECK-XTENSA-NEXT:    slli	a10, a10, 16
+; CHECK-XTENSA-NEXT:    addi.n	a10, a10, -1
+; CHECK-XTENSA-NEXT:    ssl	a8
+; CHECK-XTENSA-NEXT:    movi.n	a11, -1
+; CHECK-XTENSA-NEXT:    sll	a10, a10
+; CHECK-XTENSA-NEXT:    xor	a11, a10, a11
+; CHECK-XTENSA-NEXT:    l32i.n	a12, a9, 0
+; CHECK-XTENSA-NEXT:    sll	a12, a3
+; CHECK-XTENSA-NEXT:    l32i.n	a13, a9, 0
+; CHECK-XTENSA-NEXT:    and	a14, a13, a10
+; CHECK-XTENSA-NEXT:  .LBB1_1: # =>This Loop Header: Depth=1
+; CHECK-XTENSA-NEXT:    #     Child Loop BB1_2 Depth 2
+; CHECK-XTENSA-NEXT:    mov.n	a13, a14
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    l32i.n	a14, a9, 0
+; CHECK-XTENSA-NEXT:    and	a7, a14, a11
+; CHECK-XTENSA-NEXT:  .LBB1_2: #   Parent Loop BB1_1 Depth=1
+; CHECK-XTENSA-NEXT:    # =>  This Inner Loop Header: Depth=2
+; CHECK-XTENSA-NEXT:    mov.n	a15, a7
+; CHECK-XTENSA-NEXT:    or	a14, a12, a15
+; CHECK-XTENSA-NEXT:    or	a7, a13, a15
+; CHECK-XTENSA-NEXT:    wsr	a7, scompare1
+; CHECK-XTENSA-NEXT:    s32c1i	a14, a9, 0
+; CHECK-XTENSA-NEXT:    beq	a7, a14, .LBB1_4
+; CHECK-XTENSA-NEXT:  # %bb.3: #   in Loop: Header=BB1_2 Depth=2
+; CHECK-XTENSA-NEXT:    and	a7, a14, a11
+; CHECK-XTENSA-NEXT:    bne	a7, a15, .LBB1_2
+; CHECK-XTENSA-NEXT:  .LBB1_4: #   in Loop: Header=BB1_1 Depth=1
+; CHECK-XTENSA-NEXT:    and	a14, a14, a10
+; CHECK-XTENSA-NEXT:    bne	a14, a13, .LBB1_1
+; CHECK-XTENSA-NEXT:  # %bb.5:
+; CHECK-XTENSA-NEXT:    ssr	a8
+; CHECK-XTENSA-NEXT:    srl	a8, a14
+; CHECK-XTENSA-NEXT:    sext	a2, a8, 15
+; CHECK-XTENSA-NEXT:    memw
+; CHECK-XTENSA-NEXT:    retw.n
+
+  %1 = atomicrmw xchg i16* %a, i16 %b seq_cst
+  ret i16 %1
+}
-- 
2.40.1

